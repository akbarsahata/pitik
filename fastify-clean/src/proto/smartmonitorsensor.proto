syntax = "proto3";
package smartmonitorsensor;

// set/get mapping sensors to iot hub (ESP-32)
message MapSensor {
    uint32 room = 1; // remote room where the device placed, empty if local
    repeated Xiaomi xiaomis = 2; // xiaomi temperature humidity sensor
    repeated Honey  honeys = 3;  // EC ammonia sensor
    repeated Wind   wind = 4;    // wind sensor
    uint32 command = 5;  // 0: get, 1: add mapping, 2: remove mapping
}

// get all sensor readings
message Sensor {
    uint32  room    = 1; // remote room where the device placed, empty if local
    repeated Xiaomi xiaomis = 2;
    Mics    ammoniaMics  = 3; // ammonia MOS from MiCS
    Honey   nh3wsModbus  = 4; // ammonia EC from Honeywell
    uint32  light   = 5; // in 0.01 lux : 21.25
    Wind    wind    = 6;
    uint32  oxygen  = 7; // in 0.01 % : 19.82
    uint32 errorCodeSensor  = 8;
}

// xiaomi temperature and humidity sensor
message Xiaomi {
    bytes  id = 1;   // 4 bytes compact format : 016503DB

    // for reporting
    uint32 temp = 2; // in .1 degree celcius : 28.9
    uint32 humi = 3; // in 1 % : 67
    uint32 batt = 4; // in 1 % : 88
    uint32 rssi = 5; // in -1 dBm : 90

    // for mapping
    string name = 6; // sensor name ex. x1
    bytes  pos  = 7; // position in the farm
    uint32 dist = 8; // distance from iot hub
}

// MOS type ammonia sensor MiCS-6814
// https://www.sgxsensortech.com/sensor-selector/#prod_3297
message Mics {
    uint32 rs = 1; // shunt resistance, in 0.01
    uint32 ro = 2; // fresh air resistance, in 0.01
}

// EC type ammonia sensor with modbus protocol
// sensor: Honeywell 4NH3-100 CLE-1012-401
// end product: RS-NH3WS-N01-2 - https://www.zyzhan.com/st83597/product_3159088.html
message Honey {
    bytes  id = 1;   // 6 bytes compact format of IOT/MS/10/2022/00002 : 01010a160002

    // for reading
    uint32 ammo = 2; // ammonia concentration, in 0.1 ppm : 0.4
    uint32 temp = 3; // temperature in 0.1 degree celcius : 30.6
    uint32 humi = 4; // humidity in 0.1 % : 68.9

    // for setting
    string name = 6; // sensor name ex. z1
    bytes  pos  = 7; // position in the farm
    uint32 dist = 8; // distance from iot hub
}

// analog wind sensor
message Wind {
    bytes  id = 1;    // 6 bytes compact format of IOT/WS/10/2022/00002 : 01030a160002
    uint32 speed = 2; // in 0.01 m/s : 0.77

    // for setting
    string name = 6; // sensor name ex. w1
    bytes  pos  = 7; // position in the farm
    uint32 dist = 8; // distance from iot hub
}